version: '2'

services:
    postgres:
        image: 'postgres:15.2-alpine'
        container_name: postgres
        ports:
            - "5433:5432"

        environment:
            - POSTGRES_USER=arina
            - POSTGRES_PASSWORD=0000
            - POSTGRES_DB=scrapper
        restart: always
        networks:
            - backend
        volumes:
            - ./postgres_data:/var/lib/postgresql/data/

    liquibase-migrations:
        image: liquibase/liquibase:4.18
        depends_on:
          - postgres
        command:
          - --hub-mode=off
          - --changelog-file=master.yaml
          - --driver=org.postgresql.Driver
          - --url=jdbc:postgresql://postgres:5432/scrapper
          - --username=arina
          - --password=0000
          - update
        volumes:
            - ./migrations:/liquibase/changelog
        networks:
          - backend
        restart: on-failure

    rabbitmq:
        image: rabbitmq:3-management
        hostname: rabbitmq
        restart: always
        environment:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - "5672:5672"
          - "15672:15672"
        volumes:
          - ./rabbitmq_data:/var/lib/rabbitmq

    prometheus:
      image: prom/prometheus:latest
      volumes:
          - ./prometheus.yml:/etc/prometheus/prometheus.yml
          - ./prometheus:/prometheus
      command:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--web.enable-lifecycle'
      networks:
          - backend
      ports:
          - 9090:9090

    grafana:
        image: grafana/grafana-oss
        volumes:
            - ./grafana:/var/lib/grafana
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=admin
            - GF_USERS_ALLOW_SIGN_UP=false
        networks:
            - backend
        ports:
            - "3000:3000"

networks:
  backend: {}

